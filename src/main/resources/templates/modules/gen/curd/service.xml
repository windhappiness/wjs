<?xml version="1.0" encoding="utf-8"?>
<template>
	<name>service</name>
	<filePath>src/main/java/${packageName}/${moduleName}/service/${subModuleName}</filePath>
	<fileName>${ClassName}Service.java</fileName>
	<content><![CDATA[
/**
 * Copyright &copy; 2012-2014 <a href="https://github.com/thinkgem/jeesite">JeeSite</a> All rights reserved.
 */
package ${packageName}.${moduleName}.service<#if subModuleName != "">.${subModuleName}</#if>;

import java.util.List;
import org.apache.commons.lang3.StringUtils;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.thinkgem.jeesite.common.persistence.MiniPage;
import com.thinkgem.jeesite.common.persistence.Page;
import com.thinkgem.jeesite.common.service.CrudService;
import ${packageName}.${moduleName}.entity<#if subModuleName != "">.${subModuleName}</#if>.${ClassName};
import ${packageName}.${moduleName}.dao<#if subModuleName != "">.${subModuleName}</#if>.${ClassName}Dao;
import com.thinkgem.jeesite.modules.sys.utils.CodeUtils;

/**
 * ${functionName}Service
 * @author ${functionAuthor}
 * @version ${functionVersion}
 */
@Service
@Transactional(readOnly = true)
public class ${ClassName}Service extends CrudService<${ClassName}Dao, ${ClassName}> {

	public ${ClassName} get(String id) {
		return super.get(id);
	}
	
	public List<${ClassName}> findList(${ClassName} ${className}) {
		return super.findList(${className});
	}
	
	public Page<${ClassName}> findPage(Page<${ClassName}> page, ${ClassName} ${className}) {
		return super.findPage(page, ${className});
	}
	
	public MiniPage pageQuery(MiniPage mp, ${ClassName} ${className}) {
		Page<${ClassName}> page = new Page<${ClassName}>();
		page.setPageNo(mp.getPageNo()+1);
		page.setPageSize(mp.getPageSize());
		
		//${className}.getSqlMap().put("dsf", dataScopeFilter(${className}.getCurrentUser(), "o", "u"));
		${className}.setPage(page);
		List<${ClassName}> list = dao.findList(${className});
		if(list != null && list.size()>0) {
			for(${ClassName} e:list) {
				<#list table.columnList as c>
					<#if c.dictType != "" && c.isNotBaseField>
					//转换字典代码
					if(StringUtils.isNotBlank(e.get${c.simpleJavaField?cap_first}())) {
						<#if c.showType == "select">
						String ${c.simpleJavaField?cap_first}Str = CodeUtils.getDictLabel("${c.dictType2}->" + e.get${c.simpleJavaField?cap_first}());
						e.set${c.simpleJavaField?cap_first}(${c.simpleJavaField?cap_first}Str);
						<#elseif c.showType == "radiobox">
						String ${c.simpleJavaField?cap_first}Str = CodeUtils.getDictLabel("${c.dictType2}->" + e.get${c.simpleJavaField?cap_first}());
						e.set${c.simpleJavaField?cap_first}(${c.simpleJavaField?cap_first}Str);
						<#elseif c.showType == "treeselect">
						String ${c.simpleJavaField?cap_first}Str = CodeUtils.getUniqueNodeName("${c.dictType2}->" + e.get${c.simpleJavaField?cap_first}());
						e.set${c.simpleJavaField?cap_first}(${c.simpleJavaField?cap_first}Str);
						</#if>
						
					}
					</#if>
					
					<#if c.showType?? && c.showType == "areaselect">
						//转换行政区划代码为名称
						if(StringUtils.isNotBlank(e.get${c.simpleJavaField?cap_first}())) {
							String ${c.simpleJavaField?cap_first}NameStr = CodeUtils.getAreaFullNameByCode(e.get${c.simpleJavaField?cap_first}());
							e.set${c.simpleJavaField?cap_first}Name(${c.simpleJavaField?cap_first}NameStr);
					
						}
					</#if>
				</#list>
				
				
			}
		}
		mp.setTotal(page.getCount());
		mp.setData(list);
		
		return mp;
	}
	
	@Transactional(readOnly = false)
	public void save(${ClassName} ${className}) {
		super.save(${className});
	}
	
	@Transactional(readOnly = false)
	public void delete(${ClassName} ${className}) {
		super.delete(${className});
	}
	
}]]>
	</content>
</template>